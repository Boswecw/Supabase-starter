{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kablecoding\\\\Supabase-starter\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport supabase from \"../config/supabaseClient\";\nimport { useEffect, useState } from \"react\";\nimport SmoothieCard from \"../components/SmoothieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [fetchError, setFetchError] = useState(null);\n  const [Smoothies, setSmoothies] = useState(null);\n  useEffect(() => {\n    const fetchSmoothies = async () => {\n      const {\n        data: Smoothies,\n        error\n      } = await supabase.from('Smoothies') //name of table of supabase\n      .select(); //grabs all items in specified table when blank\n\n      if (error) {\n        setFetchError('Could not fetch the Smoothies');\n        setSmoothies(null);\n        console.log(error);\n      }\n      if (Smoothies) {\n        setSmoothies(Smoothies);\n        setFetchError(null);\n      }\n    };\n    fetchSmoothies(); //function call\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page home\",\n    children: [fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fetchError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this), Smoothies && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Smoothies\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"smoothie-grid\",\n        children: Smoothies.map(smoothie => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: smoothie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"5GpkT0bdAqQFJ2Yem4RCC+/i9Jg=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["supabase","useEffect","useState","SmoothieCard","jsxDEV","_jsxDEV","Home","_s","fetchError","setFetchError","Smoothies","setSmoothies","fetchSmoothies","data","error","from","select","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","smoothie","title","_c","$RefreshReg$"],"sources":["E:/Kablecoding/Supabase-starter/src/pages/Home.js"],"sourcesContent":["import supabase from \"../config/supabaseClient\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport SmoothieCard from \"../components/SmoothieCard\";\r\n\r\nconst Home = () => {\r\n  const [fetchError, setFetchError] = useState(null);\r\n  const [Smoothies, setSmoothies] = useState(null);\r\n\r\nuseEffect(()=>{\r\n  const fetchSmoothies = async () =>{\r\n    const {data: Smoothies, error} = await supabase\r\n    .from('Smoothies') //name of table of supabase\r\n    .select() //grabs all items in specified table when blank\r\n\r\n    if(error) {\r\n      setFetchError('Could not fetch the Smoothies');\r\n      setSmoothies(null)\r\n      console.log(error)\r\n    }\r\n    if(Smoothies){\r\n      setSmoothies(Smoothies);\r\n      setFetchError(null)\r\n    }\r\n  }\r\n  fetchSmoothies() //function call\r\n}, [])\r\n\r\n  return (\r\n    <div className=\"page home\">\r\n    {fetchError && (<p>{fetchError}</p>)}\r\n    {Smoothies && (<div className=\"Smoothies\">\r\n    {/* order using buttons */}\r\n    <div className=\"smoothie-grid\">\r\n      {Smoothies.map(smoothie => (\r\n        <p>{smoothie.title}</p>\r\n      ))}\r\n    </div>\r\n        </div>\r\n        )}\r\n        </div>\r\n  )\r\n};\r\n\r\nexport default Home"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAI;IACZ,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAW;MAChC,MAAM;QAACC,IAAI,EAAEH,SAAS;QAAEI;MAAK,CAAC,GAAG,MAAMd,QAAQ,CAC9Ce,IAAI,CAAC,WAAW,CAAC,CAAC;MAAA,CAClBC,MAAM,CAAC,CAAC,EAAC;;MAEV,IAAGF,KAAK,EAAE;QACRL,aAAa,CAAC,+BAA+B,CAAC;QAC9CE,YAAY,CAAC,IAAI,CAAC;QAClBM,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;MACpB;MACA,IAAGJ,SAAS,EAAC;QACXC,YAAY,CAACD,SAAS,CAAC;QACvBD,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC;IACDG,cAAc,CAAC,CAAC,EAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEJ,oBACEP,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,GACzBZ,UAAU,iBAAKH,OAAA;MAAAe,QAAA,EAAIZ;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAE,EACnCd,SAAS,iBAAKL,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAC,QAAA,eAEzCf,OAAA;QAAKc,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BV,SAAS,CAACe,GAAG,CAACC,QAAQ,iBACrBrB,OAAA;UAAAe,QAAA,EAAIM,QAAQ,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEd,CAAC;AAACjB,EAAA,CArCID,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAuCV,eAAeA,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}